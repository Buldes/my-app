{"ast":null,"code":"import { IncomCostMonthlyGenerate, incomCostMonthly } from \"./IncomCostPerMonth\";\nimport { monthCostAvarge, setMonthCostAverage } from \"../../Data/float\";\nexport function CalculateMonthAvarge() {\n  IncomCostMonthlyGenerate();\n  var totalCost = 0;\n  for (let i = 1; i != 13; i++) {\n    totalCost = totalCost + parseFloat(incomCostMonthly[i][1].amount);\n  }\n  setMonthCostAverage((totalCost / 12).toFixed(2));\n  console.log(monthCostAvarge);\n}\n_c = CalculateMonthAvarge;\nvar _c;\n$RefreshReg$(_c, \"CalculateMonthAvarge\");","map":{"version":3,"names":["IncomCostMonthlyGenerate","incomCostMonthly","monthCostAvarge","setMonthCostAverage","CalculateMonthAvarge","totalCost","i","parseFloat","amount","toFixed","console","log","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/Analyse/calculateMonth.js"],"sourcesContent":["import { IncomCostMonthlyGenerate, incomCostMonthly } from \"./IncomCostPerMonth\";\nimport { monthCostAvarge, setMonthCostAverage } from \"../../Data/float\";\n\nexport function CalculateMonthAvarge(){\n    IncomCostMonthlyGenerate()\n\n    var totalCost = 0\n\n    for (let i = 1; i != 13; i++){\n        totalCost = totalCost + parseFloat(incomCostMonthly[i][1].amount)\n    }\n\n    setMonthCostAverage((totalCost / 12).toFixed(2))\n    console.log(monthCostAvarge)\n}"],"mappings":"AAAA,SAASA,wBAAwB,EAAEC,gBAAgB,QAAQ,qBAAqB;AAChF,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEvE,OAAO,SAASC,oBAAoBA,CAAA,EAAE;EAClCJ,wBAAwB,EAAE;EAE1B,IAAIK,SAAS,GAAG,CAAC;EAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAC;IACzBD,SAAS,GAAGA,SAAS,GAAGE,UAAU,CAACN,gBAAgB,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;EACrE;EAEAL,mBAAmB,CAAC,CAACE,SAAS,GAAG,EAAE,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;AAChC;AAACU,EAAA,GAXeR,oBAAoB;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}