{"ast":null,"code":"import{exampleData}from\"../../Data/list\";export var yearMonthData={1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[],9:[],10:[],11:[],12:[],current:[]};export function DataSorting(){var dataCopie=exampleData;var oneYearData=[];yearMonthData={1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[],9:[],10:[],11:[],12:[],current:[]};// Kopie neu anordnen\ndataCopie.sort(function(a,b){if(a.date.year<b.date.year)return 1;if(a.date.year>b.date.year)return-1;if(a.date.month<b.date.month)return 1;if(a.date.month>b.date.month)return-1;if(parseInt(a.date.day)<parseInt(b.date.day))return-1;if(parseInt(a.date.day)>parseInt(b.date.day))return 1;return 0;});//Alle daten, die maximal 1 Jahhr her sind speichern\nfor(var i=0;i<dataCopie.length;i++){if(parseInt(dataCopie[i].date.year)<parseInt(new Date().getFullYear())){if(parseInt(dataCopie[i].date.month)<=parseInt(new Date().getMonth())){break;}}oneYearData.push(exampleData[i]);}//Gespeicherte Daten zu dazugehörigem Monat sortieren\noneYearData.forEach(function(item){if(parseInt(item.date.year)===new Date().getFullYear()){if(parseInt(item.date.month)===new Date().getMonth()+1)yearMonthData.current.push(item);else yearMonthData[item.date.month].push(item);}else yearMonthData[item.date.month].push(item);});}","map":{"version":3,"names":["exampleData","yearMonthData","current","DataSorting","dataCopie","oneYearData","sort","a","b","date","year","month","parseInt","day","i","length","Date","getFullYear","getMonth","push","forEach","item"],"sources":["/home/shs/my-app/src/Functions/Analyse/onYearDataSorting.js"],"sourcesContent":["import { exampleData } from \"../../Data/list\"\n\nexport var yearMonthData = {1:[], 2:[], 3:[], 4:[], 5:[], 6:[], 7:[], 8:[], 9:[], 10:[], 11:[], 12:[], current:[]}\n\nexport function DataSorting(){\n\n    const dataCopie = exampleData\n    const oneYearData = []\n    yearMonthData = {1:[], 2:[], 3:[], 4:[], 5:[], 6:[], 7:[], 8:[], 9:[], 10:[], 11:[], 12:[], current:[]}\n\n    // Kopie neu anordnen\n    dataCopie.sort(function(a, b) {\n        if (a.date.year < b.date.year) return 1;\n        if (a.date.year > b.date.year) return -1;\n        if (a.date.month < b.date.month) return 1;\n        if (a.date.month > b.date.month) return -1;\n        if (parseInt(a.date.day) < parseInt(b.date.day)) return -1;\n        if (parseInt(a.date.day) > parseInt(b.date.day)) return 1;\n        return 0;\n      })\n\n    //Alle daten, die maximal 1 Jahhr her sind speichern\n    for (let i = 0; i < dataCopie.length; i++) {\n        if (parseInt(dataCopie[i].date.year) < parseInt(new Date().getFullYear())){\n            if (parseInt(dataCopie[i].date.month) <= parseInt(new Date().getMonth())) {\n                break\n            }}\n\n        oneYearData.push(exampleData[i])\n    }\n    \n    //Gespeicherte Daten zu dazugehörigem Monat sortieren\n    oneYearData.forEach((item) => {\n        if (parseInt(item.date.year) === new Date().getFullYear()){\n            if (parseInt(item.date.month) === new Date().getMonth() + 1) yearMonthData.current.push(item)\n            else yearMonthData[item.date.month].push(item)}\n        else yearMonthData[item.date.month].push(item)\n    })\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}