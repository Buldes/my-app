{"ast":null,"code":"import { monthCost, monthCostAvarge } from \"../Data/float\";\nimport { exampleData } from \"../Data/list\";\nimport { CalculateMonthAvarge } from \"./Analyse/calculateMonth\";\nexport function BankBalanceLableUdate() {\n  const dataCopie = exampleData;\n  dataCopie.sort(function (a, b) {\n    if (a.date.year < b.date.year) return -1;\n    if (a.date.year > b.date.year) return 1;\n    if (a.date.month < b.date.month) return -1;\n    if (a.date.month > b.date.month) return 1;\n    if (parseInt(a.date.day) < parseInt(b.date.day)) return -1;\n    if (parseInt(a.date.day) > parseInt(b.date.day)) return 1;\n    return 0;\n  });\n  document.getElementById(\"BankBalance\").textContent = parseFloat(dataCopie[dataCopie.length - 1].bankBalance).toLocaleString('de-DE', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    style: 'currency',\n    currency: 'EUR'\n  });\n}\n_c = BankBalanceLableUdate;\nexport function SmallInfoUpdate() {\n  CalculateMonthAvarge();\n  document.getElementById(\"MonthCostAvarge\").textContent = \"Durchschnitt: \" + parseFloat(monthCostAvarge).toLocaleString('de-DE', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    style: 'currency',\n    currency: 'EUR'\n  });\n  document.getElementById(\"MonthCost\").textContent = \"Diesen Monat: \" + parseFloat(monthCost).toLocaleString('de-DE', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    style: 'currency',\n    currency: 'EUR'\n  });\n}\n_c2 = SmallInfoUpdate;\nvar _c, _c2;\n$RefreshReg$(_c, \"BankBalanceLableUdate\");\n$RefreshReg$(_c2, \"SmallInfoUpdate\");","map":{"version":3,"names":["monthCost","monthCostAvarge","exampleData","CalculateMonthAvarge","BankBalanceLableUdate","dataCopie","sort","a","b","date","year","month","parseInt","day","document","getElementById","textContent","parseFloat","length","bankBalance","toLocaleString","minimumFractionDigits","maximumFractionDigits","style","currency","_c","SmallInfoUpdate","_c2","$RefreshReg$"],"sources":["C:/Users/Kevin/Desktop/Website/my-app/src/Functions/UpdateKomponentsUpArear.js"],"sourcesContent":["import { monthCost, monthCostAvarge } from \"../Data/float\";\r\nimport { exampleData } from \"../Data/list\";\r\nimport { CalculateMonthAvarge } from \"./Analyse/calculateMonth\";\r\n\r\nexport function BankBalanceLableUdate(){\r\n    const dataCopie = exampleData\r\n\r\n    dataCopie.sort(function(a, b){\r\n    if (a.date.year < b.date.year) return -1;\r\n    if (a.date.year > b.date.year) return 1;\r\n    if (a.date.month < b.date.month) return -1;\r\n    if (a.date.month > b.date.month) return 1;\r\n    if (parseInt(a.date.day) < parseInt(b.date.day)) return -1;\r\n    if (parseInt(a.date.day) > parseInt(b.date.day)) return 1;\r\n    return 0\r\n    })\r\n    document.getElementById(\"BankBalance\").textContent = parseFloat(dataCopie[dataCopie.length-1].bankBalance).toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2, style: 'currency', currency: 'EUR'})\r\n}\r\n\r\nexport function SmallInfoUpdate(){\r\n    CalculateMonthAvarge()\r\n    document.getElementById(\"MonthCostAvarge\").textContent = \"Durchschnitt: \" + parseFloat(monthCostAvarge).toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2, style: 'currency', currency: 'EUR'})\r\n    document.getElementById(\"MonthCost\").textContent = \"Diesen Monat: \" + parseFloat(monthCost).toLocaleString('de-DE', {minimumFractionDigits: 2, maximumFractionDigits: 2, style: 'currency', currency: 'EUR'})\r\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,eAAe,QAAQ,eAAe;AAC1D,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,oBAAoB,QAAQ,0BAA0B;AAE/D,OAAO,SAASC,qBAAqBA,CAAA,EAAE;EACnC,MAAMC,SAAS,GAAGH,WAAW;EAE7BG,SAAS,CAACC,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAC;IAC7B,IAAID,CAAC,CAACE,IAAI,CAACC,IAAI,GAAGF,CAAC,CAACC,IAAI,CAACC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,IAAIH,CAAC,CAACE,IAAI,CAACC,IAAI,GAAGF,CAAC,CAACC,IAAI,CAACC,IAAI,EAAE,OAAO,CAAC;IACvC,IAAIH,CAAC,CAACE,IAAI,CAACE,KAAK,GAAGH,CAAC,CAACC,IAAI,CAACE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,IAAIJ,CAAC,CAACE,IAAI,CAACE,KAAK,GAAGH,CAAC,CAACC,IAAI,CAACE,KAAK,EAAE,OAAO,CAAC;IACzC,IAAIC,QAAQ,CAACL,CAAC,CAACE,IAAI,CAACI,GAAG,CAAC,GAAGD,QAAQ,CAACJ,CAAC,CAACC,IAAI,CAACI,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAID,QAAQ,CAACL,CAAC,CAACE,IAAI,CAACI,GAAG,CAAC,GAAGD,QAAQ,CAACJ,CAAC,CAACC,IAAI,CAACI,GAAG,CAAC,EAAE,OAAO,CAAC;IACzD,OAAO,CAAC;EACR,CAAC,CAAC;EACFC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,WAAW,GAAGC,UAAU,CAACZ,SAAS,CAACA,SAAS,CAACa,MAAM,GAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;IAACC,qBAAqB,EAAE,CAAC;IAAEC,qBAAqB,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;AAChO;AAACC,EAAA,GAberB,qBAAqB;AAerC,OAAO,SAASsB,eAAeA,CAAA,EAAE;EAC7BvB,oBAAoB,EAAE;EACtBW,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,WAAW,GAAG,gBAAgB,GAAGC,UAAU,CAAChB,eAAe,CAAC,CAACmB,cAAc,CAAC,OAAO,EAAE;IAACC,qBAAqB,EAAE,CAAC;IAAEC,qBAAqB,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EACzNV,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,WAAW,GAAG,gBAAgB,GAAGC,UAAU,CAACjB,SAAS,CAAC,CAACoB,cAAc,CAAC,OAAO,EAAE;IAACC,qBAAqB,EAAE,CAAC;IAAEC,qBAAqB,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;AACjN;AAACG,GAAA,GAJeD,eAAe;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}