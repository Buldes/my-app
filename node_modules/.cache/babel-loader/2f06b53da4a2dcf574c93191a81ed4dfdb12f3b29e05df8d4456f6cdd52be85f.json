{"ast":null,"code":"import { exampleData } from \"../../Data/list\";\nimport { monthAvarge, monthCost } from \"../../Data/float\";\nimport { yearMonthData, DataSorting } from \"./onYearDataSorting\";\nexport function CalculateMonthAvarge() {\n  DataSorting();\n  for (let i = 1; i != 13; i++) {\n    var totalCost = {\n      amount: 0,\n      count: 0\n    };\n    var totalIncom = {\n      amount: 0,\n      count: 0\n    };\n    for (let a = 0; a != yearMonthData[i].length; a++) {\n      if (yearMonthData[i][a].state === \"Einkommen\") {\n        totalIncom = {\n          amount: totalIncom.amount + parseFloat(yearMonthData[i][a].amount),\n          count: totalIncom.count + 1\n        };\n      } else {\n        totalCost = {\n          amount: totalCost.amount + parseFloat(yearMonthData[i][a].amount),\n          count: totalCost.count + 1\n        };\n      }\n    }\n    console.log(\"Monat:\" + i);\n    console.log(totalCost);\n    console.log(totalIncom);\n  }\n}\n_c = CalculateMonthAvarge;\nvar _c;\n$RefreshReg$(_c, \"CalculateMonthAvarge\");","map":{"version":3,"names":["exampleData","monthAvarge","monthCost","yearMonthData","DataSorting","CalculateMonthAvarge","i","totalCost","amount","count","totalIncom","a","length","state","parseFloat","console","log","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/Analyse/calculateMonth.js"],"sourcesContent":["import { exampleData } from \"../../Data/list\";\nimport { monthAvarge, monthCost } from \"../../Data/float\";\nimport { yearMonthData, DataSorting } from \"./onYearDataSorting\";\n\nexport function CalculateMonthAvarge(){\n    DataSorting()\n\n    for (let i = 1; i != 13; i++){\n        \n        var totalCost = {amount:0, count:0}\n        var totalIncom = {amount:0, count:0}\n\n        for (let a = 0; a != yearMonthData[i].length; a++){\n            if (yearMonthData[i][a].state === \"Einkommen\"){\n                totalIncom = {amount: totalIncom.amount + parseFloat(yearMonthData[i][a].amount), count: totalIncom.count + 1}\n            }\n            else{\n                totalCost = {amount: totalCost.amount + parseFloat(yearMonthData[i][a].amount), count: totalCost.count + 1}\n            }\n        }\n        console.log(\"Monat:\" + i)\n        console.log(totalCost)\n        console.log(totalIncom)\n        \n\n    }\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,aAAa,EAAEC,WAAW,QAAQ,qBAAqB;AAEhE,OAAO,SAASC,oBAAoBA,CAAA,EAAE;EAClCD,WAAW,EAAE;EAEb,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAC;IAEzB,IAAIC,SAAS,GAAG;MAACC,MAAM,EAAC,CAAC;MAAEC,KAAK,EAAC;IAAC,CAAC;IACnC,IAAIC,UAAU,GAAG;MAACF,MAAM,EAAC,CAAC;MAAEC,KAAK,EAAC;IAAC,CAAC;IAEpC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIR,aAAa,CAACG,CAAC,CAAC,CAACM,MAAM,EAAED,CAAC,EAAE,EAAC;MAC9C,IAAIR,aAAa,CAACG,CAAC,CAAC,CAACK,CAAC,CAAC,CAACE,KAAK,KAAK,WAAW,EAAC;QAC1CH,UAAU,GAAG;UAACF,MAAM,EAAEE,UAAU,CAACF,MAAM,GAAGM,UAAU,CAACX,aAAa,CAACG,CAAC,CAAC,CAACK,CAAC,CAAC,CAACH,MAAM,CAAC;UAAEC,KAAK,EAAEC,UAAU,CAACD,KAAK,GAAG;QAAC,CAAC;MAClH,CAAC,MACG;QACAF,SAAS,GAAG;UAACC,MAAM,EAAED,SAAS,CAACC,MAAM,GAAGM,UAAU,CAACX,aAAa,CAACG,CAAC,CAAC,CAACK,CAAC,CAAC,CAACH,MAAM,CAAC;UAAEC,KAAK,EAAEF,SAAS,CAACE,KAAK,GAAG;QAAC,CAAC;MAC/G;IACJ;IACAM,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGV,CAAC,CAAC;IACzBS,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;IACtBQ,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;EAG3B;AACJ;AAACO,EAAA,GAtBeZ,oBAAoB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}