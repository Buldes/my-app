{"ast":null,"code":"import React,{useEffect}from'react';import'./App.css';import{BankBalanceLable}from'./Lable/bankBalanceLable';import{bgColorGreen,bgColorR1}from'./Styles/backGroundColor';import{PieChartComponent}from'./Components/defaultPieChartComponent';import{SmallInfoComponent}from'./Components/smallInfoComponent';import{CostIncommListComponent}from'./Components/cost-incommListComponent';import{downArearStyle,upArearStyle}from'./Styles/arearStyles';import{CostIncommListItem}from'./Components/costIncomListItem';import{exampleData}from'./Data/list';import{monthAvarge,monthCost,monthIncomm,dailyMoney}from'./Data/float';import{GenerateCostIncomList}from'./Functions/generateListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){useEffect(function(){document.title=\"Kontostand\";});var inputAmout;function addData(props){var newData={id:exampleData.length,state:props.newState,date:{day:props.newDay,month:props.newMonth,year:props.newYear},amount:props.newAmount};exampleData.push(newData);console.log(\"Added New Data.\");}var manuelAddData=function manuelAddData(){var dropBox=document.getElementById(\"ListDropBox\");var dropBoxValue=dropBox.options[dropBox.selectedIndex].value;var amoutInput=parseFloat(inputAmout);if(isNaN(amoutInput)){console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');}else{console.log(\"Perfekt!\");addData({newState:{dropBoxValue:dropBoxValue},newDay:{},newMonth:{},newYear:{},newAmount:{amoutInput:amoutInput}});}};var getInputAmout=function getInputAmout(event){inputAmout=event.target.value;};function addList(){var listItem=[];for(var i=0;i<exampleData.length;i++){listItem.push(CostIncommListItem({the_state:exampleData[i].state,the_date:exampleData[i].date.day+\".\"+exampleData[i].date.month+\".\"+exampleData[i].date.year,the_amount:exampleData[i].amount,x:5,the_id:exampleData[i].id,key:exampleData[i].id}));}return listItem;}var dropBoxColor=function dropBoxColor(){var select=document.getElementById(\"ListDropBox\");var selectedValue=select.options[select.selectedIndex].value;if(selectedValue===\"Einkommen\"){select.style.backgroundColor=bgColorGreen;select.style.borderColor=bgColorGreen;}else{select.style.backgroundColor=bgColorR1;select.style.borderColor=bgColorR1;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"up-area\",style:upArearStyle,children:[/*#__PURE__*/_jsx(BankBalanceLable,{text:dailyMoney}),/*#__PURE__*/_jsx(SmallInfoComponent,{cost:monthCost,avarge:monthAvarge}),/*#__PURE__*/_jsx(PieChartComponent,{cost:monthCost,incomm:monthIncomm,top:\"-340px\",left:\"10%\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"down-arear\",style:downArearStyle,children:/*#__PURE__*/_jsx(CostIncommListComponent,{generateList:GenerateCostIncomList(),inputValue:inputAmout,dropBoxColorChange:dropBoxColor,getInput:getInputAmout,addButtonClick:manuelAddData})})]});}export default App;","map":{"version":3,"names":["React","useEffect","BankBalanceLable","bgColorGreen","bgColorR1","PieChartComponent","SmallInfoComponent","CostIncommListComponent","downArearStyle","upArearStyle","CostIncommListItem","exampleData","monthAvarge","monthCost","monthIncomm","dailyMoney","GenerateCostIncomList","jsx","_jsx","jsxs","_jsxs","App","document","title","inputAmout","addData","props","newData","id","length","state","newState","date","day","newDay","month","newMonth","year","newYear","amount","newAmount","push","console","log","manuelAddData","dropBox","getElementById","dropBoxValue","options","selectedIndex","value","amoutInput","parseFloat","isNaN","getInputAmout","event","target","addList","listItem","i","the_state","the_date","the_amount","x","the_id","key","dropBoxColor","select","selectedValue","style","backgroundColor","borderColor","className","children","text","cost","avarge","incomm","top","left","generateList","inputValue","dropBoxColorChange","getInput","addButtonClick"],"sources":["C:/Users/Kevin/Desktop/Website/my-app/src/App.js"],"sourcesContent":["import React, { useEffect} from 'react';\r\nimport './App.css';\r\nimport { BankBalanceLable } from './Lable/bankBalanceLable';\r\nimport { bgColorGreen, bgColorR1 } from './Styles/backGroundColor';\r\nimport { PieChartComponent } from './Components/defaultPieChartComponent';\r\nimport { SmallInfoComponent } from './Components/smallInfoComponent';\r\nimport { CostIncommListComponent } from './Components/cost-incommListComponent';\r\nimport { downArearStyle, upArearStyle } from './Styles/arearStyles';\r\nimport { CostIncommListItem } from './Components/costIncomListItem';\r\nimport { exampleData } from './Data/list';\r\nimport { monthAvarge, monthCost, monthIncomm, dailyMoney } from './Data/float';\r\nimport { GenerateCostIncomList } from './Functions/generateListItem';\r\n\r\nfunction App() {\r\n  useEffect(() => { document.title = `Kontostand`; });\r\n\r\n  var inputAmout\r\n\r\n  function addData(props){\r\n    var newData = {id: (exampleData.length), state:props.newState, \r\n                  date: {day: props.newDay, month: props.newMonth, year: props.newYear}, amount: props.newAmount}\r\n    exampleData.push(newData)\r\n    console.log(\"Added New Data.\")\r\n  }\r\n\r\n  const manuelAddData = () => {\r\n    const dropBox = document.getElementById(\"ListDropBox\")\r\n    const dropBoxValue = dropBox.options[dropBox.selectedIndex].value\r\n    const amoutInput = parseFloat(inputAmout)\r\n\r\n    if (isNaN(amoutInput)){\r\n      console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');\r\n    }\r\n    else{\r\n      console.log(\"Perfekt!\")\r\n      addData({newState:{dropBoxValue}, newDay:{}, newMonth:{}, newYear:{}, newAmount:{amoutInput}})\r\n    } \r\n  }\r\n\r\n  const getInputAmout  = (event) =>{\r\n    \r\n    inputAmout = event.target.value\r\n  }\r\n\r\n  function addList(){\r\n     let listItem = []\r\n    for (let i = 0; i < exampleData.length; i++){\r\n      listItem.push(CostIncommListItem({the_state: exampleData[i].state, \r\n                    the_date: (exampleData[i].date.day + \".\" + exampleData[i].date.month + \".\" + exampleData[i].date.year),\r\n                    the_amount: exampleData[i].amount, x: 5, the_id:exampleData[i].id, \r\n                    key: exampleData[i].id}))}\r\n    return listItem\r\n  }\r\n\r\n  const dropBoxColor = () => {\r\n    const select = document.getElementById(\"ListDropBox\")\r\n    const selectedValue = select.options[select.selectedIndex].value;\r\n    if (selectedValue === \"Einkommen\"){\r\n      select.style.backgroundColor = bgColorGreen\r\n      select.style.borderColor = bgColorGreen\r\n    }\r\n    else{\r\n      select.style.backgroundColor = bgColorR1\r\n      select.style.borderColor = bgColorR1\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='up-area' style={upArearStyle}>\r\n        <BankBalanceLable text={dailyMoney}/>\r\n\r\n        <SmallInfoComponent cost={monthCost} avarge={monthAvarge}/>\r\n\r\n        <PieChartComponent cost={monthCost} incomm={monthIncomm} top=\"-340px\" left=\"10%\"/>\r\n\r\n     </div>\r\n\r\n      <div className='down-arear' style={downArearStyle}>\r\n          <CostIncommListComponent generateList={GenerateCostIncomList()} inputValue={inputAmout} dropBoxColorChange={dropBoxColor} getInput={getInputAmout} addButtonClick={manuelAddData}/> \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}