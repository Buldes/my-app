{"ast":null,"code":"import { exampleData } from \"../../Data/list\";\nimport { UpdateCIL } from \"../updateCIL\";\nexport function GenerateData() {\n  for (let Month = 0; Month != 12; Month++) {\n    for (let Day = 0; Day != 2; Day++) {\n      if (Math.random() > 0.5) var newState = \"Einkommen\";else var newState = \"Ausgaben\";\n      var newAmout = (Math.random() * 100).toFixed(2);\n      if (newState === \"Einkommen\") var newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) + parseFloat(newAmout);else var newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) - newAmout;\n      var newData = {\n        id: exampleData.length,\n        state: newState,\n        date: {\n          day: (Math.random() * 31).toFixed(0),\n          month: Month + 1,\n          year: \"2022\"\n        },\n        amount: newAmout,\n        bankBalance: newBankBalance.toFixed(2)\n      };\n      exampleData.push(newData);\n      console.log(exampleData[exampleData.length - 1].bankBalance + \"   ,   \" + exampleData[exampleData.length - 1].state + \"   ,   \" + exampleData[exampleData.length - 1].id);\n    }\n  }\n  for (let Month = 0; Month != 12; Month++) {\n    for (let Day = 0; Day != 2; Day++) {\n      if (Math.random() > 0.5) var newState = \"Einkommen\";else var newState = \"Ausgaben\";\n      var newAmout = (Math.random() * 100).toFixed(2);\n      if (newState === \"Einkommen\") var newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) + parseFloat(newAmout);else var newBankBalance = parseFloat(exampleData[exampleData.length - 1].bankBalance) - newAmout;\n      var newData = {\n        id: exampleData.length,\n        state: newState,\n        date: {\n          day: (Math.random() * 31).toFixed(0),\n          month: Month + 1,\n          year: \"2023\"\n        },\n        amount: newAmout,\n        bankBalance: newBankBalance.toFixed(2)\n      };\n      exampleData.push(newData);\n      console.log(exampleData[exampleData.length - 1].bankBalance + \"   ,   \" + exampleData[exampleData.length - 1].state + \"   ,   \" + exampleData[exampleData.length - 1].id);\n    }\n  }\n  UpdateCIL();\n}\n_c = GenerateData;\nvar _c;\n$RefreshReg$(_c, \"GenerateData\");","map":{"version":3,"names":["exampleData","UpdateCIL","GenerateData","Month","Day","Math","random","newState","newAmout","toFixed","newBankBalance","parseFloat","length","bankBalance","newData","id","state","date","day","month","year","amount","push","console","log","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/DataFunctions/generateData.js"],"sourcesContent":["import { exampleData } from \"../../Data/list\";\nimport { UpdateCIL } from \"../updateCIL\";\n\nexport function GenerateData(){\n    for (let Month = 0; Month != 12; Month++){\n        for (let Day = 0; Day != 2; Day++){\n\n            if (Math.random() > 0.5) var newState=\"Einkommen\"\n            else var newState=\"Ausgaben\"\n\n            var newAmout = (Math.random() * 100).toFixed(2)\n\n            if (newState === \"Einkommen\") var newBankBalance = parseFloat(exampleData[exampleData.length-1].bankBalance) + parseFloat(newAmout)\n            else var newBankBalance = parseFloat(exampleData[exampleData.length-1].bankBalance) - newAmout\n\n            var newData = {id:exampleData.length, state:newState, date:{day:(Math.random()*31).toFixed(0), month:Month+1, year:\"2022\"}, amount:newAmout, bankBalance:newBankBalance.toFixed(2)}\n\n            exampleData.push(newData)\n            console.log(exampleData[exampleData.length-1].bankBalance + \"   ,   \" + exampleData[exampleData.length-1].state + \"   ,   \" + exampleData[exampleData.length-1].id)\n        }\n    }\n\n\n    for (let Month = 0; Month != 12; Month++){\n        for (let Day = 0; Day != 2; Day++){\n\n            if (Math.random() > 0.5) var newState=\"Einkommen\"\n            else var newState=\"Ausgaben\"\n\n            var newAmout = (Math.random() * 100).toFixed(2)\n\n            if (newState === \"Einkommen\") var newBankBalance = parseFloat(exampleData[exampleData.length-1].bankBalance) + parseFloat(newAmout)\n            else var newBankBalance = parseFloat(exampleData[exampleData.length-1].bankBalance) - newAmout\n\n            var newData = {id:exampleData.length, state:newState, date:{day:(Math.random()*31).toFixed(0), month:Month+1, year:\"2023\"}, amount:newAmout, bankBalance:newBankBalance.toFixed(2)}\n\n            exampleData.push(newData)\n            console.log(exampleData[exampleData.length-1].bankBalance + \"   ,   \" + exampleData[exampleData.length-1].state + \"   ,   \" + exampleData[exampleData.length-1].id)\n        }\n    }\n\n\n    UpdateCIL()\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}