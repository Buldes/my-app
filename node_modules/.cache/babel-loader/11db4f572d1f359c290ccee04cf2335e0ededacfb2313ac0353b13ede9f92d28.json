{"ast":null,"code":"import { IncomCostMonthlyGenerate, incomCostMonthly } from \"./IncomCostPerMonth\";\nexport function CalculateMonthAvarge() {\n  IncomCostMonthlyGenerate();\n  var totalCost = 0;\n  for (let i = 1; i != 13; i++) {\n    //totalCost = totalCost + parseFloat(incomCostMonthly[i][2].amount)\n    const element = incomCostMonthly[i][1].amount;\n    console.log(element);\n  }\n  console.log(totalCost);\n}\n_c = CalculateMonthAvarge;\nvar _c;\n$RefreshReg$(_c, \"CalculateMonthAvarge\");","map":{"version":3,"names":["IncomCostMonthlyGenerate","incomCostMonthly","CalculateMonthAvarge","totalCost","i","element","amount","console","log","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/Analyse/calculateMonth.js"],"sourcesContent":["import { IncomCostMonthlyGenerate, incomCostMonthly } from \"./IncomCostPerMonth\";\n\nexport function CalculateMonthAvarge(){\n    IncomCostMonthlyGenerate()\n\n    var totalCost = 0\n    for (let i = 1; i != 13; i++){\n        //totalCost = totalCost + parseFloat(incomCostMonthly[i][2].amount)\n        const element = incomCostMonthly[i][1].amount\n        console.log(element)\n    }\n\n    console.log(totalCost)\n}"],"mappings":"AAAA,SAASA,wBAAwB,EAAEC,gBAAgB,QAAQ,qBAAqB;AAEhF,OAAO,SAASC,oBAAoBA,CAAA,EAAE;EAClCF,wBAAwB,EAAE;EAE1B,IAAIG,SAAS,GAAG,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAC;IACzB;IACA,MAAMC,OAAO,GAAGJ,gBAAgB,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,MAAM;IAC7CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACxB;EAEAE,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;AAC1B;AAACM,EAAA,GAXeP,oBAAoB;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}