{"ast":null,"code":"import { yearMonthData, DataSorting } from \"./onYearDataSorting\";\nexport var incomCostMonthly = {\n  1: [],\n  2: [],\n  3: [],\n  4: [],\n  5: [],\n  6: [],\n  7: [],\n  8: [],\n  9: [],\n  10: [],\n  11: [],\n  12: [],\n  current: []\n};\nexport function IncomCostMonthlyGenerate() {\n  DataSorting();\n  incomCostMonthly = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n    9: [],\n    10: [],\n    11: [],\n    12: [],\n    current: []\n  };\n  for (let i = 1; i != 13; i++) {\n    var totalCost = {\n      amount: 0,\n      count: 0\n    };\n    var totalIncom = {\n      amount: 0,\n      count: 0\n    };\n    for (let a = 0; a != yearMonthData[i].length; a++) {\n      if (yearMonthData[i][a].state === \"Einkommen\") {\n        totalIncom = {\n          amount: totalIncom.amount + parseFloat(yearMonthData[i][a].amount),\n          count: totalIncom.count + 1\n        };\n      } else {\n        totalCost = {\n          amount: totalCost.amount + parseFloat(yearMonthData[i][a].amount),\n          count: totalCost.count + 1\n        };\n      }\n    }\n    incomCostMonthly[i].push(totalCost, totalIncom);\n  }\n  var totalCost = {\n    amount: 0,\n    count: 0\n  };\n  var totalIncom = {\n    amount: 0,\n    count: 0\n  };\n  for (let a = 0; a != yearMonthData.current.length; a++) {\n    if (yearMonthData[current][a].state === \"Einkommen\") {\n      totalIncom = {\n        amount: totalIncom.amount + parseFloat(yearMonthData[current][a].amount),\n        count: totalIncom.count + 1\n      };\n    } else {\n      totalCost = {\n        amount: totalCost.amount + parseFloat(yearMonthData[current][a].amount),\n        count: totalCost.count + 1\n      };\n    }\n  }\n  incomCostMonthly.current.push(totalCost, totalIncom);\n  console.log(incomCostMonthly);\n}\n_c = IncomCostMonthlyGenerate;\nvar _c;\n$RefreshReg$(_c, \"IncomCostMonthlyGenerate\");","map":{"version":3,"names":["yearMonthData","DataSorting","incomCostMonthly","current","IncomCostMonthlyGenerate","i","totalCost","amount","count","totalIncom","a","length","state","parseFloat","push","console","log","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/Analyse/IncomCostPerMonth.js"],"sourcesContent":["import { yearMonthData, DataSorting } from \"./onYearDataSorting\"\n\nexport var incomCostMonthly = {1:[], 2:[], 3:[], 4:[], 5:[], 6:[], 7:[], 8:[], 9:[], 10:[], 11:[], 12:[], current:[]}\n\nexport function IncomCostMonthlyGenerate(){\n\n    DataSorting()\n    incomCostMonthly = {1:[], 2:[], 3:[], 4:[], 5:[], 6:[], 7:[], 8:[], 9:[], 10:[], 11:[], 12:[], current:[]}\n\n    for (let i = 1; i != 13; i++){\n        \n        var totalCost = {amount:0, count:0}\n        var totalIncom = {amount:0, count:0}\n\n        for (let a = 0; a != yearMonthData[i].length; a++){\n            if (yearMonthData[i][a].state === \"Einkommen\"){\n                totalIncom = {amount: totalIncom.amount + parseFloat(yearMonthData[i][a].amount), count: totalIncom.count + 1}\n            }\n            else{\n                totalCost = {amount: totalCost.amount + parseFloat(yearMonthData[i][a].amount), count: totalCost.count + 1}\n            }\n        }\n\n        incomCostMonthly[i].push(totalCost, totalIncom)\n    }\n\n    var totalCost = {amount:0, count:0}\n    var totalIncom = {amount:0, count:0}\n\n    for (let a = 0; a != yearMonthData.current.length; a++){\n        if (yearMonthData[current][a].state === \"Einkommen\"){\n            totalIncom = {amount: totalIncom.amount + parseFloat(yearMonthData[current][a].amount), count: totalIncom.count + 1}\n        }\n        else{\n            totalCost = {amount: totalCost.amount + parseFloat(yearMonthData[current][a].amount), count: totalCost.count + 1}\n        }\n    }\n    incomCostMonthly.current.push(totalCost, totalIncom)\n\n    console.log(incomCostMonthly)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}