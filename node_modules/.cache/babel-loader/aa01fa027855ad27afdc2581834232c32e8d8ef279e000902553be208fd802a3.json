{"ast":null,"code":"var _jsxFileName = \"/home/shs/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { BankBalanceLable } from './Lable/bankBalanceLable';\nimport { bgColorGreen, bgColorR1 } from './Styles/backGroundColor';\nimport { PieChartComponent } from './Components/defaultPieChartComponent';\nimport { SmallInfoComponent } from './Components/smallInfoComponent';\nimport { CostIncommListComponent } from './Components/cost-incommListComponent';\nimport { downArearStyle, upArearStyle } from './Styles/arearStyles';\nimport { CostIncommListItem } from './Components/costIncomListItem';\nimport { exampleData } from './Data/list';\nimport { monthAvarge, monthCost, monthIncomm, dailyMoney } from './Data/float';\nimport { GenerateCIL } from './Functions/generateCILItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    document.title = `Kontostand`;\n  });\n  var inputAmout;\n  function addData(props) {\n    var newData = {\n      id: exampleData.length,\n      state: props.newState,\n      date: {\n        day: props.newDay,\n        month: props.newMonth,\n        year: props.newYear\n      },\n      amount: props.newAmount\n    };\n    exampleData.push(newData);\n    console.log(\"Added New Data.\");\n  }\n  const manuelAddData = () => {\n    const dropBox = document.getElementById(\"ListDropBox\");\n    const dropBoxValue = dropBox.options[dropBox.selectedIndex].value;\n    const amoutInput = parseFloat(inputAmout);\n    if (isNaN(amoutInput)) {\n      console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');\n    } else {\n      console.log(\"Perfekt!\");\n      addData({\n        newState: {\n          dropBoxValue\n        },\n        newDay: {},\n        newMonth: {},\n        newYear: {},\n        newAmount: {\n          amoutInput\n        }\n      });\n    }\n  };\n  const getInputAmout = event => {\n    inputAmout = event.target.value;\n  };\n  function addList() {\n    let listItem = [];\n    for (let i = 0; i < exampleData.length; i++) {\n      listItem.push(CostIncommListItem({\n        the_state: exampleData[i].state,\n        the_date: exampleData[i].date.day + \".\" + exampleData[i].date.month + \".\" + exampleData[i].date.year,\n        the_amount: exampleData[i].amount,\n        x: 5,\n        the_id: exampleData[i].id,\n        key: exampleData[i].id\n      }));\n    }\n    return listItem;\n  }\n  const dropBoxColor = () => {\n    const select = document.getElementById(\"ListDropBox\");\n    const selectedValue = select.options[select.selectedIndex].value;\n    if (selectedValue === \"Einkommen\") {\n      select.style.backgroundColor = bgColorGreen;\n      select.style.borderColor = bgColorGreen;\n    } else {\n      select.style.backgroundColor = bgColorR1;\n      select.style.borderColor = bgColorR1;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"up-area\",\n      style: upArearStyle,\n      children: [/*#__PURE__*/_jsxDEV(BankBalanceLable, {\n        text: dailyMoney\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallInfoComponent, {\n        cost: monthCost,\n        avarge: monthAvarge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChartComponent, {\n        cost: monthCost,\n        incomm: monthIncomm,\n        top: \"-340px\",\n        left: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"down-arear\",\n      style: downArearStyle,\n      children: /*#__PURE__*/_jsxDEV(CostIncommListComponent, {\n        generateList: GenerateCostIncomList(),\n        inputValue: inputAmout,\n        dropBoxColorChange: dropBoxColor,\n        getInput: getInputAmout,\n        addButtonClick: manuelAddData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BankBalanceLable","bgColorGreen","bgColorR1","PieChartComponent","SmallInfoComponent","CostIncommListComponent","downArearStyle","upArearStyle","CostIncommListItem","exampleData","monthAvarge","monthCost","monthIncomm","dailyMoney","GenerateCIL","jsxDEV","_jsxDEV","App","_s","document","title","inputAmout","addData","props","newData","id","length","state","newState","date","day","newDay","month","newMonth","year","newYear","amount","newAmount","push","console","log","manuelAddData","dropBox","getElementById","dropBoxValue","options","selectedIndex","value","amoutInput","parseFloat","isNaN","getInputAmout","event","target","addList","listItem","i","the_state","the_date","the_amount","x","the_id","key","dropBoxColor","select","selectedValue","style","backgroundColor","borderColor","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","cost","avarge","incomm","top","left","generateList","GenerateCostIncomList","inputValue","dropBoxColorChange","getInput","addButtonClick","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/App.js"],"sourcesContent":["import React, { useEffect} from 'react';\nimport './App.css';\nimport { BankBalanceLable } from './Lable/bankBalanceLable';\nimport { bgColorGreen, bgColorR1 } from './Styles/backGroundColor';\nimport { PieChartComponent } from './Components/defaultPieChartComponent';\nimport { SmallInfoComponent } from './Components/smallInfoComponent';\nimport { CostIncommListComponent } from './Components/cost-incommListComponent';\nimport { downArearStyle, upArearStyle } from './Styles/arearStyles';\nimport { CostIncommListItem } from './Components/costIncomListItem';\nimport { exampleData } from './Data/list';\nimport { monthAvarge, monthCost, monthIncomm, dailyMoney } from './Data/float';\nimport { GenerateCIL } from './Functions/generateCILItem';\n\nfunction App() {\n  useEffect(() => { document.title = `Kontostand`; });\n\n  var inputAmout\n\n  function addData(props){\n    var newData = {id: (exampleData.length), state:props.newState, \n                  date: {day: props.newDay, month: props.newMonth, year: props.newYear}, amount: props.newAmount}\n    exampleData.push(newData)\n    console.log(\"Added New Data.\")\n  }\n\n  const manuelAddData = () => {\n    const dropBox = document.getElementById(\"ListDropBox\")\n    const dropBoxValue = dropBox.options[dropBox.selectedIndex].value\n    const amoutInput = parseFloat(inputAmout)\n\n    if (isNaN(amoutInput)){\n      console.log('[Ein Fehler ist aufgetreten:] Es wurde keine Zahl eingegeben');\n    }\n    else{\n      console.log(\"Perfekt!\")\n      addData({newState:{dropBoxValue}, newDay:{}, newMonth:{}, newYear:{}, newAmount:{amoutInput}})\n    } \n  }\n\n  const getInputAmout  = (event) =>{\n    \n    inputAmout = event.target.value\n  }\n\n  function addList(){\n     let listItem = []\n    for (let i = 0; i < exampleData.length; i++){\n      listItem.push(CostIncommListItem({the_state: exampleData[i].state, \n                    the_date: (exampleData[i].date.day + \".\" + exampleData[i].date.month + \".\" + exampleData[i].date.year),\n                    the_amount: exampleData[i].amount, x: 5, the_id:exampleData[i].id, \n                    key: exampleData[i].id}))}\n    return listItem\n  }\n\n  const dropBoxColor = () => {\n    const select = document.getElementById(\"ListDropBox\")\n    const selectedValue = select.options[select.selectedIndex].value;\n    if (selectedValue === \"Einkommen\"){\n      select.style.backgroundColor = bgColorGreen\n      select.style.borderColor = bgColorGreen\n    }\n    else{\n      select.style.backgroundColor = bgColorR1\n      select.style.borderColor = bgColorR1\n    }\n  }\n\n  return (\n    <div className='App'>\n      <div className='up-area' style={upArearStyle}>\n        <BankBalanceLable text={dailyMoney}/>\n\n        <SmallInfoComponent cost={monthCost} avarge={monthAvarge}/>\n\n        <PieChartComponent cost={monthCost} incomm={monthIncomm} top=\"-340px\" left=\"10%\"/>\n\n     </div>\n\n      <div className='down-arear' style={downArearStyle}>\n          <CostIncommListComponent generateList={GenerateCostIncomList()} inputValue={inputAmout} dropBoxColorChange={dropBoxColor} getInput={getInputAmout} addButtonClick={manuelAddData}/> \n      </div>\n\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}