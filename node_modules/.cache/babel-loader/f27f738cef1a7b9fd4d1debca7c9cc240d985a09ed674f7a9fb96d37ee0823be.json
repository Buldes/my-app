{"ast":null,"code":"import { exampleData } from \"../../Data/list\";\nimport { monthAvarge, monthCost } from \"../../Data/float\";\nexport function CalculateMonthAvarge() {\n  const dataCopie = exampleData;\n  const oneYearData = [];\n  const monthData = {\n    \"01\": [],\n    \"2\": [],\n    \"3\": [],\n    \"4\": [],\n    \"5\": [],\n    \"6\": [],\n    \"7\": [],\n    \"8\": [],\n    \"9\": [],\n    \"10\": [],\n    \"11\": [],\n    \"12\": []\n  };\n  dataCopie.sort(function (a, b) {\n    // Vergleiche Jahr\n    if (a.date.year < b.date.year) return 1;\n    if (a.date.year > b.date.year) return -1;\n    if (a.date.month < b.date.month) return 1;\n    if (a.date.month > b.date.month) return -1;\n    if (parseInt(a.date.day) < parseInt(b.date.day)) return -1;\n    if (parseInt(a.date.day) > parseInt(b.date.day)) return 1;\n    return 0;\n  });\n  for (let i = 0; i < dataCopie.length; i++) {\n    if (parseInt(exampleData[i].date.year) < parseInt(new Date().getFullYear()) && parseInt(exampleData[i].date.month) <= parseInt(new Date().getMonth() + 1)) break;\n    oneYearData.push(exampleData[i]);\n  }\n  oneYearData.forEach(item => {\n    monthData[item.date.month].push(item);\n  });\n}\n_c = CalculateMonthAvarge;\nvar _c;\n$RefreshReg$(_c, \"CalculateMonthAvarge\");","map":{"version":3,"names":["exampleData","monthAvarge","monthCost","CalculateMonthAvarge","dataCopie","oneYearData","monthData","sort","a","b","date","year","month","parseInt","day","i","length","Date","getFullYear","getMonth","push","forEach","item","_c","$RefreshReg$"],"sources":["/home/shs/my-app/src/Functions/Analyse/calculateMonth.js"],"sourcesContent":["import { exampleData } from \"../../Data/list\";\nimport { monthAvarge, monthCost } from \"../../Data/float\";\n\nexport function CalculateMonthAvarge(){\n\n    const dataCopie = exampleData\n    const oneYearData = []\n    const monthData = {\"01\":[], \"2\":[], \"3\":[], \"4\":[], \"5\":[], \"6\":[], \"7\":[], \"8\":[], \"9\":[], \"10\":[], \"11\":[], \"12\":[]}\n\n    dataCopie.sort(function(a, b) {\n        // Vergleiche Jahr\n        if (a.date.year < b.date.year) return 1;\n        if (a.date.year > b.date.year) return -1;\n        if (a.date.month < b.date.month) return 1;\n        if (a.date.month > b.date.month) return -1;\n        if (parseInt(a.date.day) < parseInt(b.date.day)) return -1;\n        if (parseInt(a.date.day) > parseInt(b.date.day)) return 1;\n        return 0;\n      })\n\n    for (let i = 0; i < dataCopie.length; i++) {\n\n        if (parseInt(exampleData[i].date.year) < parseInt(new Date().getFullYear()) &&\n            parseInt(exampleData[i].date.month) <= parseInt(new Date().getMonth() + 1)) break\n\n        oneYearData.push(exampleData[i])\n    }\n    \n    oneYearData.forEach((item) => {\n        monthData[item.date.month].push(item)\n    })\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAEzD,OAAO,SAASC,oBAAoBA,CAAA,EAAE;EAElC,MAAMC,SAAS,GAAGJ,WAAW;EAC7B,MAAMK,WAAW,GAAG,EAAE;EACtB,MAAMC,SAAS,GAAG;IAAC,IAAI,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,GAAG,EAAC,EAAE;IAAE,IAAI,EAAC,EAAE;IAAE,IAAI,EAAC,EAAE;IAAE,IAAI,EAAC;EAAE,CAAC;EAEtHF,SAAS,CAACG,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC1B;IACA,IAAID,CAAC,CAACE,IAAI,CAACC,IAAI,GAAGF,CAAC,CAACC,IAAI,CAACC,IAAI,EAAE,OAAO,CAAC;IACvC,IAAIH,CAAC,CAACE,IAAI,CAACC,IAAI,GAAGF,CAAC,CAACC,IAAI,CAACC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,IAAIH,CAAC,CAACE,IAAI,CAACE,KAAK,GAAGH,CAAC,CAACC,IAAI,CAACE,KAAK,EAAE,OAAO,CAAC;IACzC,IAAIJ,CAAC,CAACE,IAAI,CAACE,KAAK,GAAGH,CAAC,CAACC,IAAI,CAACE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,IAAIC,QAAQ,CAACL,CAAC,CAACE,IAAI,CAACI,GAAG,CAAC,GAAGD,QAAQ,CAACJ,CAAC,CAACC,IAAI,CAACI,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAID,QAAQ,CAACL,CAAC,CAACE,IAAI,CAACI,GAAG,CAAC,GAAGD,QAAQ,CAACJ,CAAC,CAACC,IAAI,CAACI,GAAG,CAAC,EAAE,OAAO,CAAC;IACzD,OAAO,CAAC;EACV,CAAC,CAAC;EAEJ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,SAAS,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;IAEvC,IAAIF,QAAQ,CAACb,WAAW,CAACe,CAAC,CAAC,CAACL,IAAI,CAACC,IAAI,CAAC,GAAGE,QAAQ,CAAC,IAAII,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC,IACvEL,QAAQ,CAACb,WAAW,CAACe,CAAC,CAAC,CAACL,IAAI,CAACE,KAAK,CAAC,IAAIC,QAAQ,CAAC,IAAII,IAAI,EAAE,CAACE,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE;IAEhFd,WAAW,CAACe,IAAI,CAACpB,WAAW,CAACe,CAAC,CAAC,CAAC;EACpC;EAEAV,WAAW,CAACgB,OAAO,CAAEC,IAAI,IAAK;IAC1BhB,SAAS,CAACgB,IAAI,CAACZ,IAAI,CAACE,KAAK,CAAC,CAACQ,IAAI,CAACE,IAAI,CAAC;EACzC,CAAC,CAAC;AACN;AAACC,EAAA,GA5BepB,oBAAoB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}